# import Review, ReviewSubscriptionPayload, Vote, VoteSubscriptionPayload, ReviewOrderByInput from "./generated/prisma.graphql"

input Filter {
  accessibility: String
  cleanliness: Int
  locationPlaceId: String
  numStalls: Int
  privacy: Int
  rating: Int
  tpQuality: Int
  user: UserInput
}

input UserInput {
  id: String
}

type Query {
  info: String!
  feed(
    filter: Filter
    skip: Int
    first: Int
    orderBy: ReviewOrderByInput
  ): Feed!
}

type Mutation {
  post(
    accessibility: String!
    cleanliness: Int!
    locationLat: Float!
    locationLng: Float!
    locationPlaceId: String!
    numStalls: Int!
    privacy: Int!
    rating: Int!
    reviewText: String!
    tpQuality: Int!
  ): Review!
  signup(email: String!, password: String!, name: String!): AuthPayload
  login(email: String!, password: String!): AuthPayload
  vote(reviewId: ID!): Vote
}

type Subscription {
  newReview: ReviewSubscriptionPayload
  newVote: VoteSubscriptionPayload
}

type AuthPayload {
  token: String
  user: User
}

type Feed {
  reviews: [Review!]!
  count: Int!
}

type User {
  id: ID!
  name: String!
  email: String!
  reviews: [Review!]!
}
